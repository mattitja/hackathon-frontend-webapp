/* tslint:disable */
/* eslint-disable */
/**
 * Agile Wars
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EventDto } from './EventDto';
import {
    EventDtoFromJSON,
    EventDtoFromJSONTyped,
    EventDtoToJSON,
} from './EventDto';

/**
 * 
 * @export
 * @interface GameEndEventDto
 */
export interface GameEndEventDto extends EventDto {
    /**
     * 
     * @type {string}
     * @memberof GameEndEventDto
     */
    winnerId?: string;
    /**
     * 
     * @type {string}
     * @memberof GameEndEventDto
     */
    reason?: GameEndEventDtoReasonEnum;
}


/**
 * @export
 */
export const GameEndEventDtoReasonEnum = {
    Winner: 'WINNER',
    Draw: 'DRAW',
    PlayerLeftDuringGameCreation: 'PLAYER_LEFT_DURING_GAME_CREATION'
} as const;
export type GameEndEventDtoReasonEnum = typeof GameEndEventDtoReasonEnum[keyof typeof GameEndEventDtoReasonEnum];


/**
 * Check if a given object implements the GameEndEventDto interface.
 */
export function instanceOfGameEndEventDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GameEndEventDtoFromJSON(json: any): GameEndEventDto {
    return GameEndEventDtoFromJSONTyped(json, false);
}

export function GameEndEventDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GameEndEventDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        ...EventDtoFromJSONTyped(json, ignoreDiscriminator),
        'winnerId': !exists(json, 'winnerId') ? undefined : json['winnerId'],
        'reason': !exists(json, 'reason') ? undefined : json['reason'],
    };
}

export function GameEndEventDtoToJSON(value?: GameEndEventDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        ...EventDtoToJSON(value),
        'winnerId': value.winnerId,
        'reason': value.reason,
    };
}

