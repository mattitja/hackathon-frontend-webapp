/* tslint:disable */
/* eslint-disable */
/**
 * Agile Wars
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ActionDto } from './ActionDto';
import {
    ActionDtoFromJSON,
    ActionDtoFromJSONTyped,
    ActionDtoToJSON,
} from './ActionDto';
import type { WeaponDto } from './WeaponDto';
import {
    WeaponDtoFromJSON,
    WeaponDtoFromJSONTyped,
    WeaponDtoToJSON,
} from './WeaponDto';

/**
 * 
 * @export
 * @interface InventoryUpdateActionDto
 */
export interface InventoryUpdateActionDto extends ActionDto {
    /**
     * 
     * @type {Array<WeaponDto>}
     * @memberof InventoryUpdateActionDto
     */
    weapons?: Array<WeaponDto>;
}

/**
 * Check if a given object implements the InventoryUpdateActionDto interface.
 */
export function instanceOfInventoryUpdateActionDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function InventoryUpdateActionDtoFromJSON(json: any): InventoryUpdateActionDto {
    return InventoryUpdateActionDtoFromJSONTyped(json, false);
}

export function InventoryUpdateActionDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): InventoryUpdateActionDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        ...ActionDtoFromJSONTyped(json, ignoreDiscriminator),
        'weapons': !exists(json, 'weapons') ? undefined : ((json['weapons'] as Array<any>).map(WeaponDtoFromJSON)),
    };
}

export function InventoryUpdateActionDtoToJSON(value?: InventoryUpdateActionDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        ...ActionDtoToJSON(value),
        'weapons': value.weapons === undefined ? undefined : ((value.weapons as Array<any>).map(WeaponDtoToJSON)),
    };
}

